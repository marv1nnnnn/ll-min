```text
#LIB:llm-min#VER:1.0#DATE:2023-10-27T10:30:00Z
#SCHEMA_DEF_BEGIN
AIU_FIELDS:id;typ;name;purp;in;out;use;rel;src
IN_FIELDS:p;t;d;def;ex
OUT_FIELDS:f;t;d
REL_FIELDS:id;typ
#SCHEMA_DEF_END
#AIU_LIST_BEGIN
#AIU#id:svelte_feat_overview;typ:Feat;name:SvelteFramework;purp:"Framework for building user interfaces using a compiler.";in:[];out:[];use:"// Create .svelte files with HTML, CSS, JS/TS\n// Compile to optimized JavaScript";rel:[{id:svelte_file_svelte;typ:P},{id:svelte_file_svelte_js_ts;typ:P},{id:svelte_runes;typ:P},{id:svelte_template_basic_markup;typ:P},{id:svelte_bind_directive;typ:P},{id:svelte_template_use_directive;typ:P},{id:svelte_template_transition_directive;typ:P},{id:svelte_template_style_directive;typ:P},{id:svelte_template_class_attribute;typ:P},{id:svelte_feat_scoped_css;typ:P},{id:svelte_styling_custom_properties;typ:P},{id:svelte_v5_feat_svelte_boundary;typ:P},{id:svelte_special_window;typ:P},{id:svelte_feat_svelte_document;typ:P},{id:svelte_feat_svelte_body;typ:P},{id:svelte_special_head;typ:P},{id:svelte_feat_svelte_element;typ:P},{id:svelte_special_options;typ:P},{id:svelte_special_customelement;typ:P},{id:svelte_runtime;typ:P},{id:svelte_v5_feat_snippets;typ:P},{id:svelte_legacy_overview;typ:P}];src:"SvelteIntroduction"#END_AIU
#AIU#id:svelte_file_svelte;typ:Feat;name:.svelte file;purp:"Represents a Svelte component with script, markup, and style sections.";in:[];out:[];use:"<script>\n// JS/TS logic\n</script>\n\n<style>\n// CSS styles\n</style>\n\n<!-- HTML markup -->\n<div>...</div>";rel:[{id:svelte_feat_overview;typ:P},{id:svelte_runes;typ:U},{id:svelte_template_basic_markup;typ:R},{id:svelte_feat_scoped_css;typ:R},{id:svelte_styling_custom_properties;typ:R},{id:svelte_v5_feat_svelte_boundary;typ:R},{id:svelte_special_window;typ:R},{id:svelte_feat_svelte_document;typ:R},{id:svelte_feat_svelte_body;typ:R},{id:svelte_special_head;typ:R},{id:svelte_feat_svelte_element;typ:R},{id:svelte_special_options;typ:R},{id:svelte_runtime;typ:U},{id:svelte_v5_feat_snippets;typ:R}];src:"SvelteIntroduction"#END_AIU
#AIU#id:svelte_file_svelte_js_ts;typ:Feat;name:.svelte.js/.svelte.ts file;purp:"JavaScript or TypeScript file where Svelte runes can be used.";in:[];out:[];use:"import {$state} from 'svelte/types/compiler/runes';\n\nlet reactiveVar = $state(initialValue);";rel:[{id:svelte_feat_overview;typ:P},{id:svelte_runes;typ:U},{id:svelte_how_to_share_state_modules;typ:R}];src:"SvelteIntroduction"#END_AIU
#AIU#id:svelte_runes;typ:Feat;name:Svelte Runes;purp:"Symbols ($ prefix) used as compiler instructions for reactivity and components.";in:[];out:[];use:"let stateVar = $state(value);\nlet derivedVar = $derived(stateVar * 2);\n$effect(() => console.log(stateVar));";rel:[{id:svelte_feat_overview;typ:P},{id:svelte_file_svelte_js_ts;typ:R},{id:svelte_state;typ:P},{id:svelte_derived;typ:P},{id:svelte_effect;typ:P},{id:svelte_props;typ:P},{id:svelte_bindable;typ:P},{id:svelte_inspect;typ:P},{id:svelte_host;typ:P},{id:svelte_special_options;typ:C}];src:"SvelteRunes"#END_AIU
#AIU#id:svelte_state;typ:Func;name:$state;purp:"Declares reactive state. Reassigning or mutating triggers UI updates.";in:[{p:initial;t:any;d:"Initial value. Objects/arrays become deeply reactive proxies."}];out:[{f:reactive_variable;t:any;d:"The reactive variable."}];use:"let count = $state(0);\nlet item = $state({ name: 'apple' });";rel:[{id:svelte_runes;typ:P},{id:svelte_derived;typ:A},{id:svelte_effect;typ:A},{id:svelte_how_to_type_state;typ:R},{id:svelte_how_to_bind_value;typ:U},{id:svelte_how_to_bind_checked;typ:U},{id:svelte_how_to_bind_group;typ:U},{id:svelte_how_to_bind_files;typ:U},{id:svelte_how_to_bind_select_value;typ:U},{id:svelte_how_to_bind_media;typ:U},{id:svelte_how_to_bind_dimensions;typ:U},{id:svelte_how_to_use_context_with_state;typ:U},{id:svelte_how_to_share_state_modules;typ:U},{id:svelte_state_raw;typ:HwC},{id:svelte_state_snapshot;typ:HwC},{id:svelte_how_to_pass_state_to_func;typ:HwC},{id:svelte_legacy_reactive_declarations;typ:HwC}];src:"SvelteRunes"#END_AIU
#AIU#id:svelte_state_raw;typ:Func;name:$state.raw;purp:"Declares state that is not deeply reactive. Must be reassigned, not mutated.";in:[{p:initial;t:any;d:"Initial value."}];out:[{f:raw_state;t:any;d:"The non-deeply reactive variable."}];use:"let list = $state.raw([1, 2, 3]);\nlist = [...list, 4]; // Reassign";rel:[{id:svelte_state;typ:I}];src:"SvelteRunes"#END_AIU
#AIU#id:svelte_state_snapshot;typ:Func;name:$state.snapshot;purp:"Takes a static snapshot of a deeply reactive $state proxy.";in:[{p:state;t:any;d:"The $state proxy."}];out:[{f:snapshot;t:any;d:"A non-proxy copy of the value."}];use:"let obj = $state({ count: 0 });\nlet snapshot = $state.snapshot(obj);";rel:[{id:svelte_state;typ:I}];src:"SvelteRunes"#END_AIU
#AIU#id:svelte_derived;typ:Func;name:$derived;purp:"Declares reactive state derived from other state values.";in:[{p:expression;t:any;d:"Expression or function depending on other state."}];out:[{f:derived_value;t:any;d:"The derived value."}];use:"let count = $state(0);\nlet doubled = $derived(count * 2);";rel:[{id:svelte_runes;typ:P},{id:svelte_state;typ:U},{id:svelte_effect;typ:A},{id:svelte_inspect_trace;typ:U},{id:svelte_derived_by;typ:HwC},{id:svelte_legacy_reactive_statements;typ:HwC}];src:"SvelteRunes"#END_AIU
#AIU#id:svelte_derived_by;typ:Func;name:$derived.by;purp:"Declares complex derived state using a function body.";in:[{p:fn;t:Function;d:"Function that returns the derived value."}];out:[{f:derived_value;t:any;d:"The derived value."}];use:"let numbers = $state([1, 2]);\nlet total = $derived.by(() => numbers.reduce((sum, n) => sum + n, 0));";rel:[{id:svelte_derived;typ:HwC},{id:svelte_state;typ:U}];src:"SvelteRunes"#END_AIU
#AIU#id:svelte_effect;typ:Func;name:$effect;purp:"Runs code when component mounts and its dependencies change (client-side).";in:[{p:fn;t:Function;d:"Function to run. Can return a teardown function."}];out:[];use:"let count = $state(0);\n$effect(() => { console.log('Count:', count); });";rel:[{id:svelte_runes;typ:P},{id:svelte_state;typ:U},{id:svelte_derived;typ:U},{id:svelte_inspect_trace;typ:U},{id:svelte_how_to_bind_this_element;typ:U},{id:svelte_how_to_use_actions_with_effect;typ:U},{id:svelte_effect_pre;typ:HwC},{id:svelte_effect_root;typ:HwC},{id:svelte_func_onmount;typ:HwC},{id:svelte_legacy_reactive_statements;typ:HwC}];src:"SvelteRunes"#END_AIU
#AIU#id:svelte_effect_pre;typ:Func;name:$effect.pre;purp:"Runs code before DOM updates when dependencies change (client-side).";in:[{p:fn;t:Function;d:"Function to run before DOM update."}];out:[];use:"let messages = $state([]);\n$effect.pre(() => { if (messages.length > 0) autoScroll(); });";rel:[{id:svelte_effect;typ:HwC},{id:svelte_func_tick;typ:U}];src:"SvelteRunes"#END_AIU
#AIU#id:svelte_effect_root;typ:Func;name:$effect.root;purp:"Creates a non-tracked effect scope that doesn't auto-cleanup.";in:[{p:fn;t:Function;d:"Function defining effects within the root."}];out:[{f:destroy_fn;t:Function;d:"Function to manually destroy the root effect scope."}];use:"const destroy = $effect.root(() => { /* effects here */ });\ndestroy();";rel:[{id:svelte_effect;typ:HwC}];src:"SvelteRunes"#END_AIU
#AIU#id:svelte_inspect;typ:Func;name:$inspect;purp:"Logs values and their reactive changes during development.";in:[{p:values;t:list_any;d:"One or more values to inspect."}];out:[{f:with_fn;t:Function;d:"Function to provide custom logging callback."}];use:"let myVar = $state(0);\n$inspect(myVar);";rel:[{id:svelte_runes;typ:P},{id:svelte_inspect_trace;typ:HwC},{id:svelte_template_debug_tag;typ:HwC}];src:"SvelteRunes"#END_AIU
#AIU#id:svelte_inspect_trace;typ:Func;name:$inspect.trace;purp:"Traces function re-runs caused by reactive state changes (development only).";in:[{p:label;t:str;d:"Optional label for the trace."}];out:[];use:"$effect(() => { $inspect.trace(); doWork(); });";rel:[{id:svelte_inspect;typ:HwC},{id:svelte_effect;typ:U},{id:svelte_derived;typ:U}];src:"SvelteRunes"#END_AIU
#AIU#id:svelte_host;typ:Func;name:$host;purp:"Provides access to the host element when compiling as a custom element.";in:[];out:[{f:host_element;t:any;d:"The host DOM element."}];use:"<svelte:options customElement=\"my-element\" />\n<script>\n function dispatchEvent(type) {\n  $host().dispatchEvent(new CustomEvent(type));\n }\n</script>";rel:[{id:svelte_runes;typ:P},{id:svelte_special_customelement;typ:U}];src:"SvelteRunes"#END_AIU
#AIU#id:svelte_props;typ:Func;name:$props;purp:"Declares properties (props) accepted by a component.";in:[];out:[{f:props;t:object;d:"Object containing the component's props."}];use:"<script>\n let { propName, optionalProp = 'default' } = $props();\n</script>";rel:[{id:svelte_runes;typ:P},{id:svelte_how_to_define_props_ts;typ:R},{id:svelte_how_to_define_props_jsdoc;typ:R},{id:svelte_how_to_define_props_generic;typ:R},{id:svelte_how_to_define_props_wrapper_element;typ:R},{id:svelte_how_to_use_component_props;typ:U},{id:svelte_bindable;typ:U},{id:svelte_props_id;typ:U},{id:svelte_v5_patt_snippet_pass_explicit;typ:U},{id:svelte_v5_patt_snippet_pass_implicit;typ:U},{id:svelte_v5_patt_snippet_children;typ:U},{id:svelte_legacy_export_let;typ:HwC},{id:svelte_legacy_$$props_restprops;typ:HwC}];src:"SvelteRunes"#END_AIU
#AIU#id:svelte_bindable;typ:Func;name:$bindable;purp:"Marks a component prop as bindable, allowing two-way binding from parent.";in:[{p:fallback;t:any;d:"Optional fallback value when not bound.";def:undefined}];out:[];use:"let { value = $bindable() } = $props();";rel:[{id:svelte_runes;typ:P},{id:svelte_props;typ:P},{id:svelte_how_to_bind_component_prop;typ:U},{id:svelte_bind_directive;typ:U}];src:"SvelteRunes"#END_AIU
#AIU#id:svelte_props_id;typ:Func;name:$props.id;purp:"Generates an ID unique to the component instance, consistent between server/client.";in:[];out:[{f:id;t:str;d:"Unique component instance ID."}];use:"const uid = $props.id();\n<label for=\"{uid}-input\">Label</label>\n<input id=\"{uid}-input\" />";rel:[{id:svelte_props;typ:P}];src:"SvelteRunes"#END_AIU
#AIU#id:svelte_template_basic_markup;typ:Feat;name:Basic Markup;purp:"Core syntax for HTML elements, components, attributes, events, and expressions.";in:[];out:[];use:"<h1>Hello {name}!</h1>\n<MyComponent prop={value} onclick={handler} />\n<div class=\"{className}\" style:color=\"{myColor}\"></div>";rel:[{id:svelte_file_svelte;typ:P},{id:svelte_how_to_use_expressions_text;typ:P},{id:svelte_how_to_use_attributes;typ:P},{id:svelte_how_to_use_component_props;typ:P},{id:svelte_how_to_use_events;typ:P},{id:svelte_how_to_inject_html;typ:U},{id:svelte_template_if;typ:P},{id:svelte_template_each;typ:P},{id:svelte_template_key;typ:P},{id:svelte_template_await;typ:P},{id:svelte_template_const_tag;typ:P},{id:svelte_template_debug_tag;typ:P},{id:svelte_bind_directive;typ:P},{id:svelte_template_use_directive;typ:P},{id:svelte_template_transition_directive;typ:P},{id:svelte_template_style_directive;typ:P},{id:svelte_template_class_attribute;typ:P},{id:svelte_patt_animate_directive;typ:P}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_how_to_use_expressions_text;typ:HowTo;name:UseTextExpressions;purp:"Include JavaScript expressions in text content.";in:[{p:expression;t:any;d:"JavaScript expression."}];out:[];use:"<p>Count is: {count}</p>\n<div>{user.name.toUpperCase()}</div>";rel:[{id:svelte_template_basic_markup;typ:P}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_how_to_use_attributes;typ:HowTo;name:UseElementAttributes;purp:"Set attributes on HTML elements, including dynamic values and shorthand.";in:[{p:name;t:str;d:"Attribute name."},{p:value;t:any;d:"Attribute value (static or dynamic expression)." }];out:[];use:"<button disabled={!isActive}>Click me</button>\n<div class=\"{className}\">Content</div>\n<input {required} />";rel:[{id:svelte_template_basic_markup;typ:P},{id:svelte_template_class_attribute;typ:U}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_how_to_use_component_props;typ:HowTo;name:UseComponentProps;purp:"Pass data to components using attributes, including dynamic values and spread.";in:[{p:name;t:str;d:"Prop name."},{p:value;t:any;d:"Prop value (static or dynamic expression)."}];out:[];use:"<MyComponent label=\"Static\" value={dynamicValue} {...spreadProps} />";rel:[{id:svelte_template_basic_markup;typ:P},{id:svelte_props;typ:U}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_how_to_use_events;typ:HowTo;name:UseDOMEvents;purp:"Listen to DOM events on elements using 'on' prefix attributes.";in:[{p:eventName;t:str;d:"Event name (e.g., click)."},{p:handler;t:Function;d:"Event handler function."}];out:[];use:"<button onclick={handleClick}>Click</button>\n<input oninput={(e) => value = e.target.value} />";rel:[{id:svelte_template_basic_markup;typ:P},{id:svelte_legacy_on_directive;typ:HwC}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_how_to_inject_html;typ:HowTo;name:InjectRawHTML;purp:"Render raw HTML string directly into the DOM (be cautious of XSS).";in:[{p:htmlString;t:str;d:"HTML string to inject."}];out:[];use:"<article>\n {@html content}\n</article>";rel:[{id:svelte_template_basic_markup;typ:U}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_template_if;typ:Patt;name:IfBlock;purp:"Conditionally render content based on an expression.";in:[{p:expression;t:any;d:"Condition to evaluate."}];out:[];use:"{#if condition}\n <p>Content when true</p>\n{:else if anotherCondition}\n <p>Content when anotherCondition is true</p>\n{:else}\n <p>Content when false</p>\n{/if}";rel:[{id:svelte_template_basic_markup;typ:P}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_template_each;typ:Patt;name:EachBlock;purp:"Iterate over lists (arrays, iterables) to render items.";in:[{p:expression;t:any;d:"List or iterable."},{p:name;t:str;d:"Variable name for current item."},{p:index;t:str;d:"Optional variable name for item index."},{p:key;t:any;d:"Optional unique key for list item."}];out:[];use:"{#each items as item, i (item.id)}\n <li>{i}: {item.name}</li>\n{:else}\n <p>No items</p>\n{/each}";rel:[{id:svelte_template_basic_markup;typ:P},{id:svelte_how_to_use_keyed_each;typ:R},{id:svelte_how_to_use_each_no_item;typ:R},{id:svelte_how_to_use_each_else;typ:R},{id:svelte_patt_animate_directive;typ:U}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_how_to_use_keyed_each;typ:HowTo;name:UseKeyedEach;purp:"Use a unique key in #each blocks for efficient list diffing and animations.";in:[{p:list_expression;t:any;d:"The list to iterate."},{p:key_expression;t:any;d:"An expression uniquely identifying each item."}];out:[];use:"{#each items as item (item.id)}\n <li>{item.name}</li>\n{/each}";rel:[{id:svelte_template_each;typ:U},{id:svelte_patt_animate_directive;typ:A}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_how_to_use_each_no_item;typ:HowTo;name:UseEachNoItem;purp:"Render content 'n' times without iterating over list items.";in:[{p:count_expression;t:any;d:"An object with a length property."}];out:[];use:"{#each { length: 10 } as _, i}\n <span>{i + 1}</span>\n{/each}";rel:[{id:svelte_template_each;typ:U}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_how_to_use_each_else;typ:HowTo;name:UseEachElse;purp:"Display fallback content when an #each block's list is empty.";in:[{p:list_expression;t:any;d:"The list expression."}];out:[];use:"{#each items as item}\n <p>{item.name}</p>\n{:else}\n <p>List is empty.</p>\n{/each}";rel:[{id:svelte_template_each;typ:U}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_template_key;typ:Patt;name:KeyBlock;purp:"Force recreation of block contents when an expression changes.";in:[{p:expression;t:any;d:"Expression to key the block by."}];out:[];use:"{#key value}\n <Component />\n{/key}";rel:[{id:svelte_template_basic_markup;typ:P}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_template_await;typ:Patt;name:AwaitBlock;purp:"Conditionally render content based on the state of a Promise (pending, fulfilled, rejected).";in:[{p:promise_expression;t:any;d:"Promise or value."},{p:value_name;t:str;d:"Variable name for resolved value."},{p:error_name;t:str;d:"Variable name for rejection reason."}];out:[];use:"{#await promise}\n <p>Loading...</p>\n{:then value}\n <p>Result: {value}</p>\n{:catch error}\n <p>Error: {error.message}</p>\n{/await}";rel:[{id:svelte_template_basic_markup;typ:P}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_template_snippet;typ:Patt;name:SnippetBlock;purp:"Define a reusable chunk of markup (a snippet).";in:[{p:name;t:str;d:"Snippet name."},{p:parameters;t:list_any;d:"Optional parameters for the snippet."}];out:[{f:snippet;t:Snippet;d:"The defined snippet."}];use:"{#snippet mySnippet(param1, param2)}\n <p>{param1} {param2}</p>\n{/snippet}";rel:[{id:svelte_template_basic_markup;typ:P},{id:svelte_v5_feat_snippets;typ:HwC},{id:svelte_v5_patt_snippet_declaration;typ:HwC},{id:svelte_v5_patt_snippet_render;typ:U},{id:svelte_how_to_pass_snippets;typ:U},{id:svelte_how_to_pass_implicit_children_snippet;typ:U}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_template_const_tag;typ:Patt;name:ConstTag;purp:"Define a local constant within a block.";in:[{p:declaration;t:any;d:"Single variable declaration with initializer."}];out:[];use:"{#each boxes as box}\n {@const area = box.width * box.height}\n <p>Area: {area}</p>\n{/each}";rel:[{id:svelte_template_basic_markup;typ:P}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_template_debug_tag;typ:Patt;name:DebugTag;purp:"Log variable values and pause execution when they change (development only).";in:[{p:variables;t:list_str;d:"Comma-separated list of variable names."}];out:[];use:"{@debug variable1, variable2}";rel:[{id:svelte_template_basic_markup;typ:P},{id:svelte_inspect;typ:HwC}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_bind_directive;typ:Feat;name:bind:;purp:"Enables two-way data binding on element properties or component props.";in:[{p:property;t:str;d:"Property name to bind."},{p:expression;t:any;d:"Variable or function pair {get, set}."}];out:[];use:"<input bind:value={text}>\n<Component bind:prop={value}>";rel:[{id:svelte_template_basic_markup;typ:P},{id:svelte_bindable;typ:U},{id:svelte_how_to_bind_value;typ:R},{id:svelte_how_to_bind_checked;typ:R},{id:svelte_how_to_bind_group;typ:R},{id:svelte_how_to_bind_files;typ:R},{id:svelte_how_to_bind_select_value;typ:R},{id:svelte_how_to_bind_media;typ:R},{id:svelte_how_to_bind_dimensions;typ:R},{id:svelte_how_to_bind_this_element;typ:R},{id:svelte_how_to_bind_this_component;typ:R},{id:svelte_how_to_bind_component_prop;typ:R}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_how_to_bind_value;typ:HowTo;name:BindInputValue;purp:"Bind a variable to an input's value property.";in:[{p:variable;t:any;d:"Variable to bind to."}];out:[];use:"<script>\n let myValue = $state('');\n</script>\n<input bind:value={myValue}>";rel:[{id:svelte_bind_directive;typ:U},{id:svelte_state;typ:U}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_how_to_bind_checked;typ:HowTo;name:BindChecked;purp:"Bind a boolean variable to checkbox or radio input's checked state.";in:[{p:variable;t:T;d:"Boolean variable to bind."}];out:[];use:"<script>\n let isChecked = $state(false);\n</script>\n<input type=\"checkbox\" bind:checked={isChecked}>";rel:[{id:svelte_bind_directive;typ:U},{id:svelte_state;typ:U}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_how_to_bind_group;typ:HowTo;name:BindGroup;purp:"Bind multiple radio/checkbox inputs to a single variable or array.";in:[{p:variable;t:any;d:"Variable (radio) or array (checkbox) to bind."}];out:[];use:"<script>\n let selectedFruit = $state('apple');\n</script>\n<input type=\"radio\" bind:group={selectedFruit} value=\"apple\">\n<input type=\"radio\" bind:group={selectedFruit} value=\"banana\">";rel:[{id:svelte_bind_directive;typ:U},{id:svelte_state;typ:U}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_how_to_bind_files;typ:HowTo;name:BindFiles;purp:"Bind an input type='file' to a FileList variable.";in:[{p:variable;t:FileList;d:"Variable to hold the FileList."}];out:[];use:"<script>\n let selectedFiles = $state();\n</script>\n<input type=\"file\" bind:files={selectedFiles}>";rel:[{id:svelte_bind_directive;typ:U},{id:svelte_state;typ:U}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_how_to_bind_select_value;typ:HowTo;name:BindSelectValue;purp:"Bind a select element's value to a variable.";in:[{p:variable;t:any;d:"Variable to hold the selected value."}];out:[];use:"<script>\n let chosen = $state();\n</script>\n<select bind:value={chosen}>\n <option value=\"a\">A</option>\n <option value=\"b\">B</option>\n</select>";rel:[{id:svelte_bind_directive;typ:U},{id:svelte_state;typ:U}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_how_to_bind_media;typ:HowTo;name:BindMediaProperties;purp:"Bind variables to audio/video element properties like currentTime, volume, etc.";in:[{p:variable;t:any;d:"Variable to bind."},{p:property;t:str;d:"Media property name (e.g., currentTime, paused)." }];out:[];use:"<script>\n let paused = $state(false);\n</script>\n<video src=\"video.mp4\" bind:paused={paused}></video>";rel:[{id:svelte_bind_directive;typ:U},{id:svelte_state;typ:U},{id:svelte_special_window;typ:HwC}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_how_to_bind_dimensions;typ:HowTo;name:BindElementDimensions;purp:"Bind variables to an element's dimensions (clientWidth, offsetHeight, etc.). Readonly.";in:[{p:variable;t:number;d:"Variable to hold dimension."},{p:property;t:str;d:"Dimension property (e.g., clientWidth, offsetHeight)." }];out:[];use:"<script>\n let width = $state(0);\n</script>\n<div bind:clientWidth={width}>Content</div>";rel:[{id:svelte_bind_directive;typ:U},{id:svelte_state;typ:U},{id:svelte_special_window;typ:HwC}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_how_to_bind_this_element;typ:HowTo;name:BindThisElement;purp:"Get a reference to a DOM node using bind:this.";in:[{p:variable;t:any;d:"Variable to hold the DOM node reference."}];out:[];use:"<script>\n let myDiv;\n $effect(() => { /* use myDiv here */ });\n</script>\n<div bind:this={myDiv}>Content</div>";rel:[{id:svelte_bind_directive;typ:U},{id:svelte_effect;typ:U},{id:svelte_feat_svelte_element;typ:A}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_how_to_bind_this_component;typ:HowTo;name:BindThisComponent;purp:"Get a reference to a component instance using bind:this.";in:[{p:variable;t:any;d:"Variable to hold the component instance reference."}];out:[];use:"<script>\n let myComponent;\n function callMethod() { myComponent.exportedMethod(); }\n</script>\n<MyComponent bind:this={myComponent} />\n<button onclick={callMethod}>Call Method</button>";rel:[{id:svelte_bind_directive;typ:U},{id:svelte_legacy_export_let;typ:U}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_how_to_bind_component_prop;typ:HowTo;name:BindComponentProp;purp:"Create a two-way binding to a component prop that is marked as bindable.";in:[{p:variable;t:any;d:"Variable in the parent component."},{p:property;t:str;d:"Name of the bindable prop in the child component."}];out:[];use:"<script>\n import Child from './Child.svelte';\n let parentValue = $state('');\n</script>\n<Child bind:value={parentValue} />";rel:[{id:svelte_bind_directive;typ:U},{id:svelte_state;typ:U},{id:svelte_bindable;typ:U}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_template_use_directive;typ:Feat;name:use:;purp:"Apply an action function to an element when it is mounted.";in:[{p:action_fn;t:Function;d:"Action function to apply."},{p:argument;t:any;d:"Optional argument passed to the action function."}];out:[];use:"<script>\n function myAction(node, params) { /* ... */ }\n</script>\n<div use:myAction={params}>Content</div>";rel:[{id:svelte_template_basic_markup;typ:P},{id:svelte_patt_use_directive;typ:R},{id:svelte_how_to_use_actions_with_effect;typ:U}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_how_to_use_actions_with_effect;typ:HowTo;name:UseActionWithEffect;purp:"Create a persistent action that cleans up after itself using $effect.";in:[{p:action_fn;t:Function;d:"Action function."}];out:[];use:"<script>\n function myAction(node) {\n  $effect(() => { /* setup */ return () => { /* teardown */ }; });\n }\n</script>\n<div use:myAction>...</div>";rel:[{id:svelte_template_use_directive;typ:U},{id:svelte_effect;typ:U}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_template_transition_directive;typ:Feat;name:transition:;purp:"Apply a bidirectional transition when an element enters or leaves the DOM.";in:[{p:transition_fn;t:Function;d:"Transition function (e.g., fade, fly)." },{p:params;t:object;d:"Optional transition parameters."}];out:[];use:"{#if visible}\n <div transition:fade>Content</div>\n{/if}";rel:[{id:svelte_template_basic_markup;typ:P},{id:svelte_template_in_out_directive;typ:HwC},{id:svelte_how_to_use_transitions_params;typ:U},{id:svelte_how_to_use_custom_transitions;typ:U},{id:svelte_func_unmount;typ:U},{id:svelte_patt_animate_directive;typ:HwC}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_template_in_out_directive;typ:Feat;name:in:/out:;purp:"Apply unidirectional transitions when an element enters (in:) or leaves (out:) the DOM.";in:[{p:transition_fn;t:Function;d:"Transition function."},{p:params;t:object;d:"Optional transition parameters."}];out:[];use:"{#if visible}\n <div in:fly={{ y: 200 }} out:fade>Content</div>\n{/if}";rel:[{id:svelte_template_transition_directive;typ:HwC}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_how_to_use_transitions_params;typ:HowTo;name:UseTransitionParameters;purp:"Configure built-in transitions with parameters.";in:[{p:transition_fn;t:Function;d:"Built-in transition function."},{p:parameters;t:object;d:"Parameters object (e.g., { duration: 500 })."}];out:[];use:"{#if visible}\n <div transition:fade={{ duration: 1000 }}>Fades over 1s</div>\n{/if}";rel:[{id:svelte_template_transition_directive;typ:U}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_how_to_use_custom_transitions;typ:HowTo;name:UseCustomTransitions;purp:"Define and apply a custom transition function.";in:[{p:transition_fn;t:Function;d:"Your custom function."}];out:[];use:"<script>\n function customTransition(node, params) {\n  // ... return { duration, css, tick }\n }\n</script>\n{#if visible}\n <div transition:customTransition={{ speed: 1 }}>Content</div>\n{/if}";rel:[{id:svelte_template_transition_directive;typ:U}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_patt_animate_directive;typ:Patt;name:AnimateDirective;purp:"Apply an animation function to an element when its position changes using the animate: directive.";in:[{p:animation_function;t:Func;d:"The animation function (e.g., flip)."},{p:parameters;t:any;d:"Optional parameters for the animation function."}];out:[];use:"{#each items as item (item.id)}\n <div animate:flip>{item.text}</div>\n{/each}";rel:[{id:svelte_template_basic_markup;typ:P},{id:svelte_template_each;typ:U},{id:svelte_how_to_use_keyed_each;typ:A},{id:svelte_func_flip;typ:U},{id:svelte_template_transition_directive;typ:HwC}];src:"chunk_source_32"#END_AIU
#AIU#id:svelte_func_flip;typ:Func;name:flip;purp:"Calculates and animates the position change of an element using the FLIP technique.";in:[{p:node;t:Element;d:"The element to animate."},{p:from;t:DOMRect;d:"Starting position bounding box."},{p:to;t:DOMRect;d:"Ending position bounding box."},{p:params;t:dict;d:"Optional animation parameters (delay, duration, easing)."}];out:[{f:AnimationConfig;t:dict;d:"Animation configuration object."}];use:"import { flip } from 'svelte/animate'; // Used with animate: directive";rel:[{id:svelte_patt_animate_directive;typ:R}];src:"chunk_source_32"#END_AIU
#AIU#id:svelte_template_style_directive;typ:Feat;name:style:;purp:"Apply CSS styles directly to an element using a directive.";in:[{p:property;t:str;d:"CSS property name."},{p:value;t:any;d:"Dynamic style value."}];out:[];use:"<div style:color=\"red\" style:font-size=\"{size}px\">Text</div>";rel:[{id:svelte_template_basic_markup;typ:P},{id:svelte_patt_inline_style_directive;typ:R},{id:svelte_how_to_use_style_important;typ:U}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_patt_inline_style_directive;typ:Patt;name:InlineStyleDirective;purp:"Set CSS styles on an element using the style: directive shorthand.";in:[{p:css_property;t:str;d:"CSS property name."},{p:value;t:any;d:"Value for the CSS property (can be expression)."},{p:important;t:T/F;d:"Add !important flag."}];out:[];use:"<div style:color='red'>...</div>\n<div style:width='{myWidth}px' style:color|important={importantColor}>...</div>";rel:[{id:svelte_template_style_directive;typ:P},{id:svelte_how_to_use_style_important;typ:U}];src:"chunk_source_30"#END_AIU
#AIU#id:svelte_how_to_use_style_important;typ:HowTo;name:UseStyleImportantModifier;purp:"Mark a style directive value as !important.";in:[{p:property;t:str;d:"CSS property name."},{p:value;t:any;d:"Style value."}];out:[];use:"<div style:color|important=\"red\">Text</div>";rel:[{id:svelte_patt_inline_style_directive;typ:U}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_template_class_attribute;typ:Feat;name:class attribute;purp:"Set CSS classes on an element using a static string, dynamic expression, object, or array.";in:[{p:value;t:any;d:"Class string, expression, object ({className: bool}), or array."}];out:[];use:"<div class=\"static-class {dynamicClass}\" class={{ active, error: !isValid }} class={['base', themeClass]}></div>";rel:[{id:svelte_template_basic_markup;typ:P},{id:svelte_how_to_use_attributes;typ:U},{id:svelte_template_class_directive;typ:HwC}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_template_class_directive;typ:Feat;name:class:;purp:"Conditionally apply a single CSS class using a directive.";in:[{p:className;t:str;d:"Class name."},{p:condition;t:T;d:"Boolean expression."}];out:[];use:"<div class:active={isActive}>Content</div>";rel:[{id:svelte_template_class_attribute;typ:HwC}];src:"SvelteTemplate syntax"#END_AIU
#AIU#id:svelte_how_to_use_global_styles;typ:HowTo;name:UseGlobalStyles;purp:"Define CSS that applies globally or bypasses component scoping.";in:[{p:selector;t:str;d:"CSS selector."}];out:[];use:"<style>\n :global(body) { margin: 0; }\n .container :global(p) { color: red; }\n :global { div { border: 1px solid black; } }\n</style>";rel:[{id:svelte_feat_scoped_css;typ:HwC}];src:"SvelteStyling"#END_AIU
#AIU#id:svelte_styling_custom_properties;typ:Feat;name:CSS Custom Properties;purp:"Pass and use CSS custom properties (variables) within components.";in:[{p:name;t:str;d:"Property name (--my-var)."},{p:value;t:any;d:"Property value (static or dynamic)." }];out:[];use:"<Component --my-color=\"red\" />\n<style>\n div { color: var(--my-color, blue); }\n</style>";rel:[{id:svelte_file_svelte;typ:P}];src:"SvelteStyling"#END_AIU
#AIU#id:svelte_special_window;typ:Feat;name:svelte:window;purp:"Add event listeners or bind to properties of the window object.";in:[{p:event;t:str;d:"Window event name (e.g., resize)."},{p:handler;t:Function;d:"Event handler."},{p:bind_prop;t:str;d:"Window property name (e.g., scrollY)." }];out:[];use:"<svelte:window onresize={handleResize} bind:scrollY={y} />";rel:[{id:svelte_file_svelte;typ:P},{id:svelte_how_to_bind_media;typ:HwC},{id:svelte_how_to_bind_dimensions;typ:HwC}];src:"SvelteSpecial elements"#END_AIU
#AIU#id:svelte_special_document;typ:Feat;name:svelte:document;purp:"Add event listeners or bind to properties of the document object.";in:[{p:event;t:str;d:"Document event name (e.g., visibilitychange)."},{p:handler;t:Function;d:"Event handler."},{p:bind_prop;t:str;d:"Document property name (e.g., activeElement)." }];out:[];use:"<svelte:document onvisibilitychange={handleVisibility} bind:activeElement={active} />";rel:[{id:svelte_file_svelte;typ:P}];src:"SvelteSpecial elements"#END_AIU
#AIU#id:svelte_special_body;typ:Feat;name:svelte:body;purp:"Add event listeners to the document.body element.";in:[{p:event;t:str;d:"Body event name (e.g., mouseenter)."},{p:handler;t:Function;d:"Event handler."}];out:[];use:"<svelte:body onmouseenter={handleEnter} />";rel:[{id:svelte_file_svelte;typ:P}];src:"SvelteSpecial elements"#END_AIU
#AIU#id:svelte_special_head;typ:Feat;name:svelte:head;purp:"Insert elements into the document.head.";in:[];out:[];use:"<svelte:head>\n <title>Page Title</title>\n <meta name=\"description\" content=\"...\">\n</svelte:head>";rel:[{id:svelte_file_svelte;typ:P}];src:"SvelteSpecial elements"#END_AIU
#AIU#id:svelte_special_element;typ:Feat;name:svelte:element;purp:"Render an element whose tag name is determined dynamically by an expression.";in:[{p:this;t:any;d:"Expression for the element tag name (string or nullish)."}];out:[];use:"<script>\n let myTag = $state('div');\n</script>\n<svelte:element this={myTag}>Content</svelte:element>";rel:[{id:svelte_file_svelte;typ:P},{id:svelte_how_to_bind_this_element;typ:A}];src:"SvelteSpecial elements"#END_AIU
#AIU#id:svelte_special_options;typ:Feat;name:svelte:options;purp:"Specify per-component compiler options.";in:[{p:option;t:str;d:"Option name (e.g., runes, customElement)."},{p:value;t:any;d:"Option value."}];out:[];use:"<svelte:options runes={true} customElement=\"my-widget\" />";rel:[{id:svelte_file_svelte;typ:P},{id:svelte_runes;typ:C},{id:svelte_special_customelement;typ:C}];src:"SvelteSpecial elements"#END_AIU
#AIU#id:svelte_runtime_context;typ:Feat;name:Context API;purp:"Allows components to access values from ancestors without prop drilling.";in:[];out:[];use:"// Parent:\nimport { setContext } from 'svelte';\nsetContext('key', value);\n// Child:\nimport { getContext } from 'svelte';\nconst value = getContext('key');";rel:[{id:svelte_runtime;typ:P},{id:svelte_how_to_use_context_with_state;typ:R},{id:svelte_how_to_use_context_type_safe;typ:R},{id:svelte_how_to_use_context_replace_global;typ:R},{id:svelte_runtime_stores;typ:HwC}];src:"SvelteRuntime"#END_AIU
#AIU#id:svelte_how_to_use_context_with_state;typ:HowTo;name:UseContextWithState;purp:"Share reactive state down the component tree using Context.";in:[{p:key;t:any;d:"Context key."},{p:state;t:any;d:"$state variable."}];out:[];use:"// Parent:\nimport { setContext } from 'svelte';\nlet data = $state({});\nsetContext('data', data);\n// Child:\nimport { getContext } from 'svelte';\nconst data = getContext('data');";rel:[{id:svelte_runtime_context;typ:U},{id:svelte_state;typ:U}];src:"SvelteRuntime"#END_AIU
#AIU#id:svelte_how_to_use_context_type_safe;typ:HowTo;name:UseTypeSafeContext;purp:"Implement type-safe context using helper functions.";in:[{p:key;t:any;d:"Unique context key."},{p:value;t:any;d:"Context value."}];out:[{f:setter_fn;t:Function;d:"Function to set context."},{f:getter_fn;t:Function;d:"Function to get context."}];use:"// context.js\nimport { setContext, getContext } from 'svelte';\nconst key = {};\nexport function setMyContext(value) { setContext(key, value); }\nexport function getMyContext() { return getContext(key); }";rel:[{id:svelte_runtime_context;typ:U}];src:"SvelteRuntime"#END_AIU
#AIU#id:svelte_how_to_use_context_replace_global;typ:HowTo;name:UseContextReplaceGlobalState;purp:"Use Context instead of global module state to prevent server-side rendering issues.";in:[{p:key;t:any;d:"Context key."},{p:state;t:any;d:"State value."}];out:[];use:"// Parent Component:\nimport { setContext } from 'svelte';\nimport { data } from './data.svelte.js';\nsetContext('data', data); // Pass data via context\n// Child Component:\nimport { getContext } from 'svelte';\nconst data = getContext('data'); // Retrieve data via context";rel:[{id:svelte_runtime_context;typ:U},{id:svelte_how_to_share_state_modules;typ:HwC}];src:"SvelteRuntime"#END_AIU
#AIU#id:svelte_runtime_lifecycle;typ:Feat;name:Lifecycle Hooks;purp:"Functions to schedule callbacks at specific points in a component's lifecycle.";in:[];out:[];use:"import { onMount, onDestroy, tick } from 'svelte';";rel:[{id:svelte_runtime;typ:P},{id:svelte_func_onmount;typ:P},{id:svelte_func_ondestroy;typ:P},{id:svelte_func_tick;typ:P},{id:svelte_effect;typ:HwC},{id:svelte_legacy_func_beforeupdate;typ:HwC},{id:svelte_legacy_func_afterupdate;typ:HwC}];src:"SvelteRuntime"#END_AIU
#AIU#id:svelte_func_onmount;typ:Func;name:onMount;purp:"Schedules a callback to run after the component is mounted to the DOM (client-side).";in:[{p:fn;t:Function;d:"Callback function. Can return a cleanup function."}];out:[];use:"import { onMount } from 'svelte';\nonMount(() => { console.log('mounted'); return () => console.log('unmounting'); });";rel:[{id:svelte_runtime_lifecycle;typ:P},{id:svelte_patt_onmount_cleanup;typ:R},{id:svelte_effect;typ:HwC},{id:svelte_how_to_bind_this_element;typ:U}];src:"SvelteRuntime"#END_AIU
#AIU#id:svelte_patt_onmount_cleanup;typ:Patt;name:OnMountCleanup;purp:"Return a function from onMount to clean up side effects when the component is unmounted.";in:[{p:cleanup_function;t:Func;d:"Function to run on unmount."}];out:[];use:"import { onMount } from 'svelte';\nonMount(() => { const interval = setInterval(() => {...}, 1000); return () => clearInterval(interval); });";rel:[{id:svelte_func_onmount;typ:P}];src:"chunk_source_17"#END_AIU
#AIU#id:svelte_func_ondestroy;typ:Func;name:onDestroy;purp:"Schedules a callback to run immediately before the component is unmounted (client and server).";in:[{p:fn;t:Function;d:"Callback function."}];out:[];use:"import { onDestroy } from 'svelte';\nonDestroy(() => { console.log('destroying'); });";rel:[{id:svelte_runtime_lifecycle;typ:P}];src:"SvelteRuntime"#END_AIU
#AIU#id:svelte_func_tick;typ:Func;name:tick;purp:"Returns a promise that resolves after any pending state changes and DOM updates are applied.";in:[];out:[{f:promise;t:Promise;d:"Promise resolving after updates."}];use:"import { tick } from 'svelte';\nasync function updateAndTick() { state = newState; await tick(); console.log('DOM updated'); }";rel:[{id:svelte_runtime_lifecycle;typ:P},{id:svelte_effect_pre;typ:U}];src:"SvelteRuntime"#END_AIU
#AIU#id:svelte_legacy_func_beforeupdate;typ:Func;name:beforeUpdate;purp:"[DEPRECATED] Schedule a callback to run just before the component is updated in legacy mode.";in:[{p:callback;t:Func;d:"Function to run before updating."}];out:[];use:"import { beforeUpdate } from 'svelte';\nbeforeUpdate(() => { console.log('updating'); });";rel:[{id:svelte_runtime_lifecycle;typ:HwC}];src:"chunk_source_17"#END_AIU
#AIU#id:svelte_legacy_func_afterupdate;typ:Func;name:afterUpdate;purp:"[DEPRECATED] Schedule a callback to run just after the component is updated in legacy mode.";in:[{p:callback;t:Func;d:"Function to run after updating."}];out:[];use:"import { afterUpdate } from 'svelte';\nafterUpdate(() => { console.log('updated'); });";rel:[{id:svelte_runtime_lifecycle;typ:HwC}];src:"chunk_source_17"#END_AIU
#AIU#id:svelte_runtime_imperative;typ:Feat;name:Imperative Component API;purp:"Functions to create, mount, hydrate, and unmount component instances programmatically.";in:[];out:[];use:"import { mount, hydrate, unmount } from 'svelte';";rel:[{id:svelte_runtime;typ:P},{id:svelte_how_instantiate;typ:R},{id:svelte_feat_hydration;typ:P},{id:svelte_func_mount;typ:P},{id:svelte_func_hydrate;typ:P},{id:svelte_func_unmount;typ:P},{id:svelte_func_render;typ:P}];src:"SvelteRuntime"#END_AIU
#AIU#id:svelte_how_instantiate;typ:HowTo;name:ClientComponentInstantiation;purp:"Instantiate a Svelte component on the client side, mounting it to a DOM target.";in:[{p:target;t:AIU_id;d:"DOM element to mount the component to.";ex:document.querySelector('#app')},{p:hydrate;t:T/F;d:"Whether to upgrade existing DOM (SSR) instead of creating new elements.";def:F;ex:T},{p:intro;t:T/F;d:"Whether to play transitions on initial render.";def:F;ex:T},{p:context;t:dict;d:"Root-level context key-value pairs for the component.";def:new Map();ex:new Map([['key','value']])}];out:[{f:component_instance;t:AIU_id;d:"The created component instance."}];use:"import Component from './Component.svelte';\nconst component = new Component({ target: document.body, props: { ... } });";rel:[{id:svelte_runtime_imperative;typ:P},{id:svelte_feat_hydration;typ:U},{id:svelte_func_mount;typ:R},{id:svelte_func_hydrate;typ:R}];src:"chunk_source_1"#END_AIU
#AIU#id:svelte_feat_hydration;typ:Feat;name:ComponentHydration;purp:"Upgrade existing server-rendered DOM with a client-side component instance.";in:[{p:hydrate;t:T/F;d:"Set to true during component instantiation.";def:F;ex:T},{p:hydratable;t:T/F;d:"Compiler option for the component.";ex:T}];out:[];use:"import Component from './App.svelte';\nnew Component({ target: document.querySelector('#server-rendered-html'), hydrate: true });";rel:[{id:svelte_runtime_imperative;typ:P},{id:svelte_how_instantiate;typ:C},{id:svelte_func_hydrate;typ:I}];src:"chunk_source_1"#END_AIU
#AIU#id:svelte_func_mount;typ:Func;name:mount;purp:"Instantiates a component and mounts it to a target DOM element (client-side).";in:[{p:component;t:any;d:"Svelte component definition."},{p:options;t:object;d:"Options including target element, props, etc."}];out:[{f:component_exports;t:object;d:"Component's exported values."}];use:"import { mount } from 'svelte';\nimport App from './App.svelte';\nmount(App, { target: document.body, props: { name: 'World' } });";rel:[{id:svelte_runtime_imperative;typ:P},{id:svelte_how_instantiate;typ:R},{id:svelte_cls_set;typ:R},{id:svelte_cls_on;typ:R},{id:svelte_cls_destroy;typ:R},{id:svelte_patt_instance_props_access;typ:R}];src:"SvelteRuntime"#END_AIU
#AIU#id:svelte_func_hydrate;typ:Func;name:hydrate;purp:"Reuses server-rendered HTML within a target and makes it interactive (client-side).";in:[{p:component;t:any;d:"Svelte component definition."},{p:options;t:object;d:"Options including target element, props, etc."}];out:[{f:component_exports;t:object;d:"Component's exported values."}];use:"import { hydrate } from 'svelte';\nimport App from './App.svelte';\nhydrate(App, { target: document.getElementById('app'), props: { name: 'World' } });";rel:[{id:svelte_runtime_imperative;typ:P},{id:svelte_feat_hydration;typ:I},{id:svelte_how_instantiate;typ:R},{id:svelte_func_render;typ:A},{id:svelte_cls_set;typ:R},{id:svelte_cls_on;typ:R},{id:svelte_cls_destroy;typ:R},{id:svelte_patt_instance_props_access;typ:R}];src:"SvelteRuntime"#END_AIU
#AIU#id:svelte_func_unmount;typ:Func;name:unmount;purp:"Removes a component from the DOM and cleans up.";in:[{p:component_instance;t:any;d:"Component instance from mount/hydrate."},{p:options;t:object;d:"Options including outro (bool) for transitions."}];out:[{f:promise;t:Promise;d:"Promise resolving after unmounting (especially with outro)."}];use:"import { unmount } from 'svelte';\nunmount(myComponent, { outro: true });";rel:[{id:svelte_runtime_imperative;typ:P},{id:svelte_template_transition_directive;typ:U}];src:"SvelteRuntime"#END_AIU
#AIU#id:svelte_func_render;typ:Func;name:render (svelte/server);purp:"Renders a component to HTML on the server.";in:[{p:component;t:any;d:"Svelte component definition."},{p:options;t:object;d:"Options including props, context, etc."}];out:[{f:body;t:str;d:"HTML for the body."},{f:head;t:str;d:"HTML for the head."}];use:"import { render } from 'svelte/server';\nimport App from './App.svelte';\nconst { html, head } = render(App, { props: { data: {} } });";rel:[{id:svelte_runtime_imperative;typ:P},{id:svelte_func_hydrate;typ:A},{id:svelte_cls_render;typ:R}];src:"SvelteReference"#END_AIU
#AIU#id:svelte_cls_set;typ:ClsMth;name:$set;purp:"Programmatically set props on a component instance created with mount or hydrate.";in:[{p:props;t:dict;d:"Object with props and their new values.";ex:{answer:42}}];out:[];use:"component.$set({ answer: 42 });";rel:[{id:svelte_func_mount;typ:R},{id:svelte_func_hydrate;typ:R}];src:"chunk_source_1"#END_AIU
#AIU#id:svelte_cls_on;typ:ClsMth;name:$on;purp:"Listen for a component-dispatched event.";in:[{p:ev;t:str;d:"Event name.";ex:"selected"},{p:callback;t:Func;d:"Function to call when event is dispatched. Receives event object.";ex:"(event) => console.log(event.detail)"}];out:[{f:off_function;t:Func;d:"Function to remove the listener."}];use:"const off = component.$on('selected', (event) => { console.log(event.detail.selection); });\noff();";rel:[{id:svelte_func_mount;typ:R},{id:svelte_func_hydrate;typ:R},{id:svelte_func_createeventdispatcher;typ:U}];src:"chunk_source_1"#END_AIU
#AIU#id:svelte_cls_destroy;typ:ClsMth;name:$destroy;purp:"Remove a component instance from the DOM and trigger cleanup.";in:[];out:[];use:"component.$destroy();";rel:[{id:svelte_func_mount;typ:R},{id:svelte_func_hydrate;typ:R}];src:"chunk_source_1"#END_AIU
#AIU#id:svelte_patt_instance_props_access;typ:Patt;name:ComponentInstancePropsAccess;purp:"Access component props directly on an instance created with mount or hydrate using getters/setters (requires accessors compiler option).";in:[{p:prop_name;t:str;d:"Name of the prop."},{p:value;t:any;d:"New value for the prop (for setting)."}];out:[{f:prop_value;t:any;d:"Current value of the prop (for getting)."}];use:"// Requires { accessors: true } compiler option\nconsole.log(component.count);\ncomponent.count += 1;";rel:[{id:svelte_func_mount;typ:R},{id:svelte_func_hydrate;typ:R}];src:"chunk_source_1"#END_AIU
#AIU#id:svelte_cls_render;typ:ClsMth;name:Component.render;purp:"Render a component on the server side to generate HTML, CSS, and head content.";in:[{p:props;t:dict;d:"Object of properties to supply to the component.";def:{};ex:{answer:42}},{p:options;t:dict;d:"Rendering options.";def:{};ex:{context:new Map([['key','value']])}}];out:[{f:head;t:str;d:"Content for the <head>."},{f:html;t:str;d:"The rendered HTML."},{f:css;t:str;d:"The component's CSS."}];use:"// Requires svelte/register (Node.js)\nconst App = require('./App.svelte').default;\nconst { head, html, css } = App.render({ answer: 42 });";rel:[{id:svelte_func_render;typ:R}];src:"chunk_source_1"#END_AIU
#AIU#id:svelte_how_to_define_props_ts;typ:HowTo;name:DefinePropsTypeScript;purp:"Add type safety to component props using TypeScript.";in:[{p:PropsInterface;t:any;d:"TypeScript interface for props."}];out:[];use:"<script lang=\"ts\">\n interface Props { name: string; value?: number; }\n let { name, value }: Props = $props();\n</script>";rel:[{id:svelte_props;typ:U}];src:"SvelteMisc"#END_AIU
#AIU#id:svelte_how_to_define_props_jsdoc;typ:HowTo;name:DefinePropsJSDoc;purp:"Add type information to component props using JSDoc comments.";in:[{p:PropsType;t:str;d:"JSDoc type annotation."}];out:[];use:"<script>\n /** @type {{ name: string, value?: number }} */\n let { name, value } = $props();\n</script>";rel:[{id:svelte_props;typ:U}];src:"SvelteMisc"#END_AIU
#AIU#id:svelte_how_to_define_props_generic;typ:HowTo;name:DefineGenericProps;purp:"Define components with generic props using the 'generics' attribute.";in:[{p:GenericParameters;t:str;d:"Generic type parameters string."}];out:[];use:"<script lang=\"ts\" generics=\"T\">\n let { items }: { items: T[] } = $props();\n</script>";rel:[{id:svelte_props;typ:U}];src:"SvelteMisc"#END_AIU
#AIU#id:svelte_how_to_define_props_wrapper_element;typ:HowTo;name:DefinePropsWrapperElement;purp:"Define component props that include all attributes of a native HTML element.";in:[{p:ElementType;t:str;d:"Type name from svelte/elements (e.g., HTMLButtonAttributes)."}];out:[];use:"<script lang=\"ts\">\n import type { HTMLButtonAttributes } from 'svelte/elements';\n let { children, ...rest }: HTMLButtonAttributes = $props();\n</script>\n<button {...rest}>{@render children?.()}</button>";rel:[{id:svelte_props;typ:U}];src:"SvelteMisc"#END_AIU
#AIU#id:svelte_how_to_type_state;typ:HowTo;name:TypeState;purp:"Add type safety to $state variables using TypeScript.";in:[{p:Type;t:str;d:"TypeScript type annotation."}];out:[];use:"<script lang=\"ts\">\n let count: number = $state(0);\n let user: { name: string } = $state({ name: 'Alice' });\n // Handle undefined initial value\n let data: string | undefined = $state();\n</script>";rel:[{id:svelte_state;typ:U}];src:"SvelteMisc"#END_AIU
#AIU#id:svelte_how_to_share_state_modules;typ:HowTo;name:ShareStateAcrossModules;purp:"Share reactive state between .svelte files and .svelte.js/.svelte.ts files.";in:[{p:state;t:any;d:"$state declared state."}];out:[];use:"// store.svelte.js\nexport const appState = $state({ count: 0 });\n// Component.svelte\n<script>\n import { appState } from './store.svelte.js';\n</script>\n<button onclick={() => appState.count++}>{appState.count}</button>";rel:[{id:svelte_state;typ:U},{id:svelte_file_svelte_js_ts;typ:U},{id:svelte_runtime_stores;typ:HwC},{id:svelte_how_to_use_context_replace_global;typ:HwC}];src:"SvelteRunes"#END_AIU
#AIU#id:svelte_mod_svelte_store;typ:Tool;name:svelte/store;purp:"Module providing minimal implementations of the Svelte store contract.";in:[];out:[];rel:[{id:svelte_runtime;typ:P},{id:svelte_runtime_stores;typ:U},{id:svelte_feat_store_dollar_prefix;typ:U},{id:svelte_func_writable;typ:P},{id:svelte_func_readable;typ:P},{id:svelte_func_derived;typ:P},{id:svelte_func_readonly;typ:P},{id:svelte_func_get;typ:P}];src:"chunk_source_54"#END_AIU
#AIU#id:svelte_runtime_stores;typ:Feat;name:Svelte Stores;purp:"Objects allowing reactive access to values via a subscribe method.";in:[];out:[];use:"import { writable, readable, derived, get } from 'svelte/store';";rel:[{id:svelte_runtime;typ:P},{id:svelte_mod_svelte_store;typ:U},{id:svelte_feat_store_dollar_prefix;typ:R},{id:svelte_how_to_share_state_modules;typ:HwC},{id:svelte_runtime_context;typ:HwC}];src:"SvelteRuntime"#END_AIU
#AIU#id:svelte_feat_store_dollar_prefix;typ:Feat;name:StoreDollarPrefix;purp:"Access the value of a Svelte store reactively within a component by prefixing the variable name with $.";in:[{p:store;t:AIU_id;d:"A Svelte store object."}];out:[{f:store_value;t:any;d:"The current value of the store."}];use:"<script>\n import { writable } from 'svelte/store';\n const count = writable(0);\n</script>\n<p>Count: {$count}</p>";rel:[{id:svelte_runtime_stores;typ:P},{id:svelte_mod_svelte_store;typ:U}];src:"chunk_source_54"#END_AIU
#AIU#id:svelte_func_writable;typ:Func;name:writable;purp:"Create a store that allows its value to be set from outside.";in:[{p:initial_value;t:any;d:"The initial value of the store."},{p:start_stop_function;t:Func;d:"Optional function called when subscribers go from 0 to 1, returns stop function."}];out:[{f:store;t:AIU_id;d:"A writable store object with subscribe, set, and update methods."}];use