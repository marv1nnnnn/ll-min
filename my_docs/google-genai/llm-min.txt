S:Gemini Developer API;V:2025-04-22|O:K~AI,Generative AI,LLM,Content Generation,API,Models;P~Developer Experience,Multimodality,Scalability,Responsibility|I:P~API Key,Client Library;C~^pip install google-generativeai^;S~Obtain API Key->Install SDK->Initialize Client->Make API Request|C:M~Text Generation,Image Generation,Video Generation,Long Context,Structured Output,Function Calling,Document Understanding,Image Understanding,Video Understanding,Audio Understanding,Code Execution,Grounding;O~Client,Models,Content,Part,ClientConfig,Backend,Response,Result,Context;E~API_KEY|A:google.genai#Client(I(api_key~str);T~models~Object(M~generate_content(model~str,contents~Content)>Response));genai#Client(I(ctx~context.Context,config~ClientConfig);T~Models~Object(M~GenerateContent(ctx~context.Context,model~str,content~?,options~?)>Result));/v1beta/models/{model}#generateContent(contents~Content[],key~str)>Response;genai#NewClient(ctx~context.Context,config~ClientConfig)>Client;genai#Text(text~str)>Part|D:Content(parts~Part[]);Part(text~str);ClientConfig(APIKey~str,Backend~Backend);Backend~str;Response(text~str);Result;context.Context|U:W:Quickstart(Get API Key->Init Client->Call generateContent->Print Result)|F:Text Generation,Image Generation,Video Generation,Long Context,Structured Output,Thinking,Function Calling,Document Understanding,Image Understanding,Video Understanding,Audio Understanding,Code Execution,Grounding,Prompt Engineering,Context Caching,Files API,Token Counting,Fine-tuning,Embeddings,Safety Settings,Safety Guidance|X:REST,Python,JavaScript,Go,On-device,Android,Chrome built-in web APIs,Google Cloud|Z:^Ifrom google import genai;client = genai.Client(api_key="YOUR_API_KEY");response = client.models.generate_content(model="gemini-2.0-flash",contents="Explain how AI works in a few words",);print(response.text)^;^Iimport { GoogleGenAI } from "@google/genai";const ai = new GoogleGenAI({ apiKey: "YOUR_API_KEY" });async function main() { const response = await ai.models.generateContent({ model: "gemini-2.0-flash", contents: "Explain how AI works in a few words", }); console.log(response.text); }await main();^;^Ipackage main;import ("context";"fmt";"log";"google.golang.org/genai");func main() { ctx := context.Background(); client, err := genai.NewClient(ctx, &genai.ClientConfig{ APIKey: "YOUR_API_KEY", Backend: genai.BackendGeminiAPI, }); if err != nil { log.Fatal(err); } result, err := client.Models.GenerateContent( ctx, "gemini-2.0-flash", genai.Text("Explain how AI works in a few words"), nil, ); if err != nil { log.Fatal(err); } fmt.Println(result.Text()) }^;^Ecurl "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=YOUR_API_KEY" \ -H 'Content-Type: application/json' \ -X POST \ -d '{ "contents": [ { "parts": [ { "text": "Explain how AI works in a few words" } ] } ] }'^